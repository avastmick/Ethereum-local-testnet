#!/bin/bash

# Sets up a local Ethereum testnet - this should be good for any unix install
# 1. TODO Checks to see if Ethereum is installed (if not then install)
# 2. TODO Creates a conf file for the genesis.json and password files
# 3. Creates a set of scripts that allows the creation and teardown of a single Node
# 4. TODO Creates a script to duplicate the initial node across multiple local accounts and create a cluster managed from a master account. Mining will occur at one designated node; transactions will be commited against a separated initial node.

# Add some variables
# networkid
networkid=1973
# IPC port
ipc_port=30801
# RPC port
rpc_port=8901
# data_dir
data_dir=/tmp/$networkid
# conf
conf=./conf

# Help
function usage {
    echo Usage:
    echo    testnet [param]
    echo params:
    echo    --create : Creates a new testnet node
    echo    --addacc : Creates a account on the node. The first account is the coinbase account.
    echo    --unlockacc [account_no] : Unlocks the account given
    echo    --minestart : starts the miner
    echo    --minestop : stops the miner
    echo    --clean : Cleans the installation back to base account
    echo    --help -h : This message
}
# Install Ethereum
function install {
    if [[ $OSTYPE == darwin* ]]; then # This is MacOS, so Brew
        echo Installing using brew
        brew tap ethereum/ethereum &&
        brew install ethereum
    elif [[ $OSTYPE == linux-gnu ]]; then # This is Ubuntu, so ...
        echo Installing using pkg-mgr
        sudo add-apt-repository ppa:ethereum/ethereum-qt &&
        sudo add-apt-repository ppa:ethereum/ethereum &&
        sudo add-apt-repository ppa:ethereum/ethereum-dev &&
        sudo apt-get update &&
        sudo apt-get install cpp-ethereum &&
        sudo apt-get install ethereum
    else # This is not supported
        echo Unsupported Operating system
        exit
    fi
}
function checkEthereum {

    if [ $which geth ] || [ $which eth ] != "" ]; then
        echo No current installation going to install - as root
        install
    else
        echo Already installed geth
    fi
}
# Configure
function configure {
    mkdir conf
    genesis_block='{
        "nonce": "0x0000000000000042",
        "mixhash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "difficulty": "0x4000",
        "alloc": {},
        "coinbase": "0x0000000000000000000000000000000000000000",
        "timestamp": "0x00",
        "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "extraData": "Custom Ethereum Genesis Block for initiating a local test net",
        "gasLimit": "0xffffffff"
    }'
    echo $genesis_block > $conf/genesis_block.json
    echo 'testpwd-01' > conf/testnet-pwd
}
# Create
function create {
    echo checking that Ethereum is installed
    checkEthereum
    configure
    # Create the genesis block json and password file in conf
    echo creating local testnet...
    geth --genesis $conf/genesis_block.json --datadir $data_dir --networkid $networkid --port $ipc_port --rpcport $rpc_port --nodiscover 2>> $data_dir/eth.log &
    echo Done. See eth.log for details
}
# Add account
function addacc {
    echo Adding account...
    geth --datadir $data_dir --networkid $networkid --port $ipc_port --rpcport $rpc_port --password $conf/testnet-pwd account new
}
# Starts the miner on the designated node
function startmining {
    curl -X POST --data '{"jsonrpc":"2.0","method":"miner_start","params":[1],"id":64}' http://192.168.99.100:8901;
}
# Stop the miner on the designated node
function stopmining {
    curl -X POST --data '{"jsonrpc":"2.0","method":"miner_stop","params":[1],"id":64}' http://192.168.99.100:8901
}
# Unlock account
# TODO Need to get this working when Geth is already running
function unlockacc {
    if [ -z "$2" ]; then
        echo No account passed in exiting;
        exit
    else
        echo unlocking $2
        geth --password ./conf/testnet-pwd --unlock $2  --networkid 1973 --port 30801 --rpcport 8901
    fi
}
# Clean
function clean {
    rm -rf $data_dir
}
if [ -z "$1" ]; then
    usage
    exit
fi
if [[ "$1" == "--create" ]]; then
    create;
elif [[ "$1" == "--addacc" ]]; then
    addacc;
elif [[ "$1" == "--unlockacc" ]]; then
    unlockacc;
elif [[ "$1" == "--minestart" ]]; then
    startmining;
elif [[ "$1" == "--minestop" ]]; then
    stopmining;
elif [[ "$1" == "--clean" ]]; then
    clean;
elif [[ "$1" == "--help" ]]; then
    usage;
elif [[ "$1" == "-h" ]]; then
    usage;
else
        echo Unknown command.
        usage;
fi
